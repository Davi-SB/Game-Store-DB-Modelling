--HAVING/GROUP BY (QUANTOS JOGOS FORAM FINANCIADOS POR ALGUMA EMPRESA)
SELECT COUNT(*)
FROM DESENVOLVE D
GROUP BY EMPRESA_ID
HAVING EMPRESA_ID IS NOT NULL;

--INNER JOIN (QUAL O VALOR TOTAL QUE O PLAYER DE ID 'X' GASTOU EM JOGOS)
SELECT U.ID, SUM(J.PREÇO)
FROM USUARIO U INNER JOIN
	TEM T ON T.USUARIO_ID = U.ID INNER JOIN
	JOGO J ON J.ID = T.JOGO_ID
GROUP_BY U.ID;

--OUTER JOIN (NOME EMPRESAS QUE NUNCA FINANCIARAM JOGOS)
SELECT E.NOME
FROM EMPRESA E LEFT OUTER JOIN
	DESENVOLVE D ON E.ID = D.EMPRESA_ID
WHERE D.JOGO_ID IS NULL;

--SEMI JOIN (NOMES DOS DESENVOLVEDORES QUE DESENVOLVERAM JOGOS)
SELECT D.NOME
FROM DEV D INNER JOIN 
	USUARIO U ON D.ID = U.ID
WHERE EXITS (SELECT * FROM DESENVOLDE DE WHERE DE.USUARIO_ID = U.ID)

--ANTI JOIN (NOME DOS JOGOS QUE NAO FORAM COMPRADOS POR ALGUM PLAYER)
SELECT J.NOME
FROM JOGO J
WHERE NOT EXISTS (SELECT * FROM TEM T)

--SUBCONSULTA DO TIPO ESCALAR (QUAIS NOMES DOS JOGOS QUE POSSUEM O PREÇO MAIOR QUE A MÉDIA DE PREÇOS)
SELECT J.NOME
FROM JOGO J
WHERE J.PREÇO > (SELECT AVG(PRECO) FROM JOGO)

--SUBCONSULTA DO TIPO LINHA (QUAIS OS NOMES DOS JOGOS FORAM LANÇACOS NA MESMA DATA QUE O JOGO DE ID '2'
SELECT J.NOME
FROM JOGO J
WHERE J.DATA_LANCAMENTO = (SELECT DATA FROM JOGO WHERE ID = '2');

--SUBCONSULTA DO TIPO TABELA (QUAIS OS NOMES DOS JOGOS COMPARTILHADOS ENTRE O MESMO PAR DE DONO DE ID '1' E DEPENDENTE DE ID '2')
SELECT J.NOME
FROM JOGO J
WHERE J.ID IN (SELECT C.ID_JOGO FROM COMPARTILHA C WHERE C.ID_DONO = '1' AND C.ID_DEPENDENTE = '2');

--UNION (QUAIS OS NOMES DE TODOS OS DEVS E TODOS OS PLAYERS)
(SELECT NOME FROM DEV) UNION (SELECT NOME FROM PLAYER);
 
