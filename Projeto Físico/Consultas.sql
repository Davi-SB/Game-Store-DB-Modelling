--HAVING/GROUP BY (QUANTOS JOGOS FORAM FINANCIADOS POR ALGUMA EMPRESA)
SELECT EMPRESA_ID, COUNT(*) AS QTD
FROM DESENVOLVE D
GROUP BY EMPRESA_ID
HAVING EMPRESA_ID IS NOT NULL;

--INNER JOIN (QUAL O VALOR TOTAL QUE O PLAYER DE ID 'X' GASTOU EM JOGOS)
SELECT U.ID, SUM(J.PRECO) AS TOTAL_GASTO
FROM USUARIO U INNER JOIN
	TEM T ON T.USUARIO_ID = U.ID INNER JOIN
	JOGO J ON J.ID = T.JOGO_ID
GROUP BY U.ID;

--OUTER JOIN (NOME EMPRESAS QUE NUNCA FINANCIARAM JOGOS)
SELECT E.NOME
FROM EMPRESA E LEFT OUTER JOIN
	DESENVOLVE D ON E.ID = D.EMPRESA_ID
WHERE D.JOGO_ID IS NULL;

--SEMI JOIN (NOMES DOS DESENVOLVEDORES QUE DESENVOLVERAM JOGOS)	
SELECT U.USERNAME
FROM DEV D INNER JOIN 
	USUARIO U ON D.USUARIO_ID = U.ID
WHERE EXISTS (SELECT * FROM DESENVOLVE DE WHERE DE.USUARIO_ID = U.ID);

--ANTI JOIN (NOME DOS JOGOS QUE NAO FORAM COMPRADOS POR ALGUM PLAYER)
SELECT J.NOME
FROM JOGO J
WHERE NOT EXISTS (SELECT * FROM TEM T WHERE T.JOGO_ID = J.ID);

--SUBCONSULTA DO TIPO ESCALAR (QUAIS NOMES DOS JOGOS QUE POSSUEM O PREÇO MAIOR QUE A MÉDIA DE PREÇOS)
SELECT J.NOME
FROM JOGO J
WHERE J.PRECO > (SELECT AVG(PRECO) FROM JOGO);

--SUBCONSULTA DO TIPO LINHA (QUAIS OS NOMES DOS JOGOS QUE FORAM LANÇADOS NA MESMA DATA QUE O JOGO DE ID '101'
SELECT J.NOME
FROM JOGO J
WHERE J.DT_LANCAMENTO = (SELECT DT_LANCAMENTO FROM JOGO WHERE ID = '101');

--SUBCONSULTA DO TIPO TABELA (QUAIS OS NOMES DOS JOGOS COMPARTILHADOS ENTRE O MESMO PAR DE DONO DE ID '1111' E DEPENDENTE DE ID '1112')
SELECT J.NOME
FROM JOGO J
WHERE J.ID IN (SELECT C.JOGO_ID FROM COMPARTILHA C WHERE C.DONO_ID = '1111' AND C.Dependente_ID = '1112');

--OPERAÇÃO DE CONJUNTO (QUAIS OS ID'S DOS PLAYERS QUE TAMBÉM SÃO DEVS)		
SELECT * FROM (SELECT USUARIO_ID FROM DEV) INTERSECT (SELECT USUARIO_ID FROM PLAYER);
 
